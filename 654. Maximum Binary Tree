/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
          
          return ans(0,nums.length-1,nums);
    }
    public static TreeNode ans(int low,int high,int[] nums)
    {
        if(low > high ) 
           return null;

        int max = nums[low],index = low;
        for(int i = low ; i <= high ; i++)
        {
            if(max < nums[i])
              { max = nums[i];
                index = i;
              }
        }

        TreeNode tree = new TreeNode(max);

        tree.left = ans(low,index-1,nums);
        tree.right = ans(index +1,high,nums);

        return tree;
    }
}
