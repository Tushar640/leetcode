class Solution {
public:
    int maxDivScore(vector<int>& nums, vector<int>& divisors) {
        vector<int>ans;
        int temp;
        int index=0;
        sort(divisors.begin(),divisors.end());
        for(int i = 0 ; i < divisors.size() ; i++)
        {     int count = 0;
            for(int j  = 0 ; j < nums.size() ; j++)
            {
                  if((nums[j] % divisors[i]) == 0 )
                  {
                      count++;

                  }
            }
            ans.push_back(count);
            if(temp < count)
            {
                temp = count;         //giving the maximum cound and index of divisors of maximum cound
                index = i;
            }

        }
        bool flag = false;
        for(int i =0 ; i < divisors.size() ; i++)
        {
            if( temp != ans[i])
            {
                flag=true;         // if all vlaues are not same in count vector the flag true
            }
        }
        if(flag==true) // flag true means this is unique vlaue
        {
            return divisors[index];
        }
        return divisors[0];           // if flag is flase that's means all vlaues are same then return minumum divisors vlaue
        
    }
    
};
