class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int n = nums2.length;
        int i = 0 , j = 0 ;
        int[] merged = new int[m+n];
        int k = 0;
        while(i < m && j < n)
        {
           if(nums1[i] < nums2[j])
              {
                merged[k] = nums1[i];
                i++;
                k++;
              }
            else if(nums1[i] > nums2[j])
             {
                merged[k] = nums2[j];
                j++;
                k++;
             }
             else if(nums1[i] == nums2[j])
              {
                merged[k] =nums1[i];
                k++;
                merged[k] = nums2[j];
                k++;
                i++;
                j++;
              }
        }
        while(i < m)
        {
            merged[k] = nums1[i];
            k++;
            i++;
        }
        while(j < n)
        {
            merged[k] = nums2[j];
            j++;
            k++;
        }
        int mid = merged.length/2;
        System.out.println(mid);
        if(merged.length % 2 == 0)
        {
            return (double) (merged[mid]+merged[mid-1])/2;
        }
        return (double) merged[mid];
    }
}
